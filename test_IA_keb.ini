;***********************************
;cosmosis script for 6x2pt Roman_SO
;based on DES_Y1 script
;***********************************
[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[fisher]
step_size = 0.05

[pipeline]
fast_slow = T
first_fast_module = bin_bias
; first_fast_module was bin_bias

values = %(ROMANxCMB_SRC_DIR)s/test_IA_keb_values.ini
priors = %(ROMANxCMB_SRC_DIR)s/test_IA_keb_priors.ini ; for few variables none with a prior
modules = consistency camb halofit growth extrapolate load_nz_lens load_nz_source lens_photoz_bias source_photoz_bias unbiased_galaxies IA pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_like
; ;   Computes the full set of cosmological parameter, e.g. h->H_0, Omega_m->Omega_m h^2
;     consistency
; ;   Computes the CMB and linear matter power spectra
;     camb
;     OR
; ;    growth
; ;    ehu
; ;    distances
; ;    camb_background
; ;   Computes the nonlinear matter spectrum
;     halofit
; ;   Computes the growth rate
;     growth
; ;   only needed when above turned off
; ;   Extrapolates the matter power spectra to high k
;     extrapolate
; ;   Loads the number density of the survey from file NOT USED, replaced with below
; ;    fits_nz
; ;   Loads WFIRST bins from txt files
;     load_nz_lens
;     load_nz_source
; ;   Biases the Lens photo-z values
;     lens_photoz_bias
; ;   Biases the source photo-z values
;     source_photoz_bias
; ;   Computes the galaxy power spectrum (pretending for the moment that b is 1
;     unbiased_galaxies
; ;   Computes the NLA intrinsic alignment model
;     IA
; ;   Applies an additional redshift dependence to the NLA model
;     ia_z_field
; ;   Computes C_ell values using the Limber integral
;     pk_to_cl
; ;   Applies per-bin bias values to the galaxy-galaxy lensing and galaxy spectra
;     bin_bias
; ;   Adds the intrinsic alignment contribution to the lensing
;     add_intrinsic
; ;   Applies a shear calibration bias
;     shear_m_bias
; ;   Computes the 2pt function likelihood
;     2pt_like
; ;   Lukas: saves the theory power spectra in a data format
; ;    save_2pt
; ;   Lukas: script to include the covaraince matrix calculated with cosmolike
; ;    add_covariance
; ;   there is usually a 2pt in the likelihoods

likelihoods = 2pt
extra_output = cosmological_parameters/sigma_8  ; Derived parameter to save

quiet=T
timing=F
debug=F


; parameters used elsewhere in this file
[DEFAULT]
ROMANxCMB_SRC_DIR = modules/RomanxCMB
2PT_FILE = %(ROMANxCMB_SRC_DIR)s/6x2pt_Roman_SO_gaussian.fits
2PT_DATA_SETS = shear_cl galaxy_shear_cl shear_cmbkappa_cl galaxy_cl galaxy_cmbkappa_cl cmbkappa_cl
; when the order of the datasets is changed the gaussian covariance calculation breaks!

RUN_NAME = test_IA_keb
; planck_like_path=/path/to/planck/data/plc_2.0

; output parameters
[output]
filename=test_IA_keb-chain.txt
format=text

; sampler parameters
[multinest]
max_iterations = 50000
multinest_outfile_root = mn_%(RUN_NAME)s
resume = F
tolerance = 0.1
constant_efficiency = F
live_points = 250
efficiency = 0.8


[test]
save_dir=6x2pt_Roman_SO
fatal_errors=T

[emcee]
walkers = 160
samples = 10000
nsteps = 5

[polychord]
live_points = 10
feedback=5

; These configure the pipeline elements listed above

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py


; Eisenstein and Hu test
[growth]
file = cosmosis-standard-library/structure/growth_factor/interface.so
zmin = 0.0
zmax = 4.0
dz = 0.01


[ehu]
file = %(ROMANxCMB_SRC_DIR)s/eisenstein_hu_cdm/eisenstein_hu_cdm_module.so
zmin = 0.0
zmax = 4.0
nz_steps = 301
kmin=1e-5
kmax=10.0
nk_steps=200

;apparently i need distances as well
[distances]
file = %(ROMANxCMB_SRC_DIR)s/dynamical_de_distances/distances.py
zmin = 0.0
zmax = 4.0
dz = 0.01

[camb_background]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=background
feedback=0

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=3000
feedback=0
kmin=1e-5
kmax=10.0
nk=200
do_tensors=F ; check that this doesn't break it
do_lensing=T
high_ell_template=$COSMOSIS_SRC_DIR/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
;need to increase accuracy!


[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700

[growth]
file=cosmosis-standard-library/structure/growth_factor/interface.so
zmin=0.
zmax=4.
nz=401

[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[fits_nz]
;depricated...
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_section = T
prefix_extension = T

[load_nz_lens]
file = %(ROMANxCMB_SRC_DIR)s/load_nz/load_nz.py
filepath = %(ROMANxCMB_SRC_DIR)s/load_nz/WFIRST_zdist/WFIRST_zdist_lenses_bin
output_section = nz_lens
nbin = 10

[load_nz_source]
file = %(ROMANxCMB_SRC_DIR)s/load_nz/load_nz.py
filepath = %(ROMANxCMB_SRC_DIR)s/load_nz/WFIRST_zdist/WFIRST_zdist_sources_bin
output_section = nz_source
nbin = 10

[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py

[IA]
;using modified la model 
;file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
file = %(ROMANxCMB_SRC_DIR)s/la_model/linear_alignments_interface.py
do_galaxy_intrinsic=T
method=keb
k_e_correction_folder=%(ROMANxCMB_SRC_DIR)s/la_model/k_e_correction/

;[ia_z_field]
;file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
;do_galaxy_intrinsic = T

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 30.
ell_max = 3000.
n_ell = 20 
position-shear = lens-source ; lens and source kind of look switched to me? -Lukas
shear-shear = source-source
position-position = lens-lens
intrinsic-intrinsic = source-source
shear-intrinsic = source-source
position-intrinsic = lens-source
shear-Cmbkappa = source-cmb ;cmb is just a placeholder, kappa kernel is hardcoded
Cmbkappa-Cmbkappa = cmb-cmb
intrinsic-Cmbkappa = source-cmb
position-Cmbkappa = lens-cmb
verbose = F
get_kernel_peaks=F

[bin_bias]
file = cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
perbin=F
position-shear=T
shear-cmbkappa=T ;needed to make cmb kappa work

[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F


[2pt_like]
file = %(ROMANxCMB_SRC_DIR)s/2pt_modified/2pt_like.py
; cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm=T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance=F
covmat_name=COVMAT



; Additional modules that can be used to add other likelihoods
; to the data


[camb_planck]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=3000
feedback=0
kmin=1e-5
kmax=10.0
nk=200
do_lensing = T
do_tensors = T
do_nonlinear = T
high_ell_template = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/boltzmann/camb/camb_Jan15/HighLExtrapTemplate_lenspotentialCls.dat
accuracy_boost=1.1
high_accuracy_default = T


[planck_tt_highell]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; data_1 = 
; %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik

[planck]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
; data_2 = %(planck_like_path)s/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik


[planck_lensing]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; lensing_1 = 
; %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing

[planck_all]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; data_1 = %(planck_like_path)s/hi_l/plik_lite/plik_lite_v18_TT.clik
; data_2 = %(planck_like_path)s/low_l/bflike/lowl_SMW_70_dx11d_2014_10_03_v5c_Ap.clik
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; lensing_1 = 
; %(planck_like_path)s/lensing/smica_g30_ftl_full_pttptt.clik_lensing


; only for fisher! we need more info than just the likelihood, but this is less accurate
[planck_fisher]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015_simple/planck2015_simple.py


[boss_dr12]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/boss_dr12/boss_dr12.py
mode = 0  ; BAO

[6dfgs]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/6dfgs/6dfgs.py
mode = 0 ; BAO

[mgs_bao]
file = ${COSMOSIS_SRC_DIR}/cosmosis-des-library/external/bao/mgs_bao/mgs_bao.py

[jla]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

[pantheon]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/pantheon/pantheon.py

[riess16]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/riess16/riess16.py
